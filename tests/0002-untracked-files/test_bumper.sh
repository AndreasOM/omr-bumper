#!/bin/bash
set -e

echo "Testing omr-bumper with untracked files..."

# Make sure we're in the test repository
cd "$(dirname "$0")"

# Display initial version
echo "Initial version:"
grep version Cargo.toml

# First, let's modify the version in Cargo.toml to have a -dev suffix for testing
sed -i.bak 's/version = "0.1.1-dev"/version = "0.1.0-dev"/' Cargo.toml
rm Cargo.toml.bak

# Create a valid Cargo.lock file
cat > Cargo.lock << 'EOF'
# This file is automatically @generated by Cargo.
# It is not intended for manual editing.
version = 3

[[package]]
name = "test-project"
version = "0.1.0-dev"
EOF

# Commit the changes
git add Cargo.toml Cargo.lock
git commit -m "Update version to dev for testing"
git push origin main

echo "Updated to dev version:"
grep version Cargo.toml

# Create some untracked files
echo "Creating untracked files..."
echo "# This is an untracked file" > untracked.md
echo "# Another untracked file" > untracked2.txt
mkdir -p untracked_dir
echo "# File in untracked directory" > untracked_dir/file.txt

# Run omr-bumper from parent directory
echo "Running omr-bumper..."
cd ../..
cargo run -- --path tests/0002-untracked-files --pre-release-suffix alpha --bump-level patch

# Check if the version changed as expected
echo "After omr-bumper run:"
cd tests/0002-untracked-files
grep version Cargo.toml

# Check if tags were created
echo "Tags:"
git tag -l

# Verify untracked files still exist
echo "Checking if untracked files still exist:"
ls -la untracked*

# If there are tags, verify we can fetch them
if [ "$(git tag -l | wc -l)" -gt 0 ]; then
  git fetch --tags
  git show "$(git tag | tail -1)"
else
  echo "No tags created."
fi

echo "Test completed!"